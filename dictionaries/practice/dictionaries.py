""" 1 """
# Создайте словарь a = {'x': 1, 'y': 2, 'z': 1} и распечатайте один из ключей
""" 
a = {'x': 1, 'y': 2, 'z': 1} 
print(list(a.keys())[1]) 
"""



""" 2 """
# Объявите словарь a = {'a': 1, 'b': 2, 'c': 1} удалите один из элементов и распечатайте удалённый элемент.
""" 
a = {'a': 1, 'b': 2, 'c': 1}
print(a.pop('b')) 
"""



""" 3 """
# Объявите словарь a = {'a': 1, 'b': 2, 'c': 1} добавьте в него новую пару ключ: значение {'f': 55} специальным методом и распечатайте.
""" 
a = {'a': 1, 'b': 2, 'c': 1}
a.update({'f': 55})
print(a) 
"""



""" 4 """
# Объявите словарь a = {'a': 1, 'b': 2, 'c': 1} удалите всего его элементы специальным методом и распечатайте словарь. Результат в терминале, должен быть такой: {} 
""" 
a = {'a': 1, 'b': 2, 'c': 1}
a.clear()
print(a) 
"""



""" 5 """
# Дан словарь a = {'a': 1, 'b': 2, 'c': 1} выведите все его ключи методом словаря, то есть только a, b, c
""" 
a = {'a': 1, 'b': 2, 'c': 1}
print(list(a.keys())) 
"""



""" 6 """
# Объявите словарь a = {'a': 1, 'b': 2, 'c': 1} сделайте его копию b специальным методом и распечатайте эту копию.
""" 
a = {'a': 1, 'b': 2, 'c': 1}
b = a.copy()
print(b) 
"""



""" 7 """
# Дан словарь a = {'a': 1, 'b': 2, 'c': 1} пройдитесь по нему циклом и распечатайте все ключи.
""" 
a = {'a': 1, 'b': 2, 'c': 1} 
for key in a.keys():
    print(key) 
"""



""" 8 """
# Создайте словарь a = {'a': 1, 'b': 2, 'c': 1} пройдитесь по нему и распечатайте все значения
""" 
a = {'a': 1, 'b': 2, 'c': 1}
for value in a.values():
    print(value) 
"""



""" 9 """
# Создайте словарь a с числовыми значениями. Создайте новый словарь b, такой же как словарь а, но все четные значения замените на 2.
""" 
a = {'a': 1, 'b': 4, 'c': 1, 'd': 5, 'e': 6} 
b = {key: 2 if value%2==0 else value for key, value in a.items()}
print(b) 
"""



""" 10 """
# Дан словарь, удалите из него все элементы с пустыми значениями.
""" 
a = {'a': None, 'b': 1, 'c': 2, 'd': None, 'e': 3}
b = {}
for key, value in a.items():
    if value:
        b.update({key:value})

print(b) 
"""



""" 11 """
# Создайте словарь a, где ключами будут названия товаров, а значениями их цены, затем пройдитесь циклом по нему и поменяйте все значения элементов, разделив их на 5.
""" 
a = {'apple': 0.40, 'orange': 0.35, 'banana': 0.25}
b = {key: value/5 for key, value in a.items()}
print(b) 
"""



""" 12 """
# Создайте словарь где ключами будут фрукты, а значением их цены. Удалите те элементы, значение которых будет чётным (специальным методом) и распечатайте результат.
# (Должен измениться словарь a)
""" 
a = {'apple': 2, 'orange': 5, 'banana': 10} 
for k, v in list(a.items()): 
    if v % 2 == 0: 
         del a[k] 
print(a)  
"""



""" 13 """
# Создайте словарь, затем поменяйте местами ключи и значения. Распечайте полученный результат.
""" 
a = {'a': 1, 'b': 2, 'c': 3}
b = {v : k for k, v in a.items()}
print(b) 
"""



""" 14 """
# Создайте словарь, где значениями будут являться числа. Найдите сумму этих значений и распечатайте результат. 
""" 
a = {'a': 3, 'b': 2}
b = sum(list(a.values()))
print(b) 
"""



""" 15 """
# В переменные a1 , a2 , a3 создайте любые словари тремя возможными способами.
""" 
a1 = dict({'k':1})
a2 = {'k':1}
keys = ['key1', 'key2', 'key3']
values = ['value1', 'value2', 'value3']
d = dict(zip(keys, values))
"""



""" 16 """
# Создайте словарь. Достаньте одно значение по ключу, используя специальный метод словарей, достающий один ключ, и распечатайте его.
""" 
dict_ = {'x': 1, 'y': 2, 'z': 1}
a = dict_.get('y')
print(a) 
"""



""" 17 """
# Объявите словарь. Удалите один из элементов, не используя методы словаря
""" 
dict_ = {'a': 1, 'b': 2, 'c': 1}
del dict_['a']
print(dict_) 
"""



""" 18 """
# Объявите словарь Выведите всего его элементы специальным методом и распечатайте результат.
""" 
dict_ = {'a': 1, 'b': 2, 'c': 1}
total = dict_.items()
print(total) 
"""



""" 19 """    
# Дан словарь. Распечатайте максимальное значение в словаре.
""" 
dict_ = {'a': 32, 'b': 56, 'c': 37, 'd': 21}
print(max(list(dict_.values()))) 
"""



""" 20 """
# Дан словарь. Распечатайте минимальное значение в словаре
""" 
dict_ = {'a': 32, 'b': 56, 'c': 37, 'd': 21}
print(min(list(dict_.values()))) 
"""



""" 21 """
# Создайте словарь dict1 с числовыми значениями. Создайте новый словарь dict2, такой же как словарь dict1, но все нечетные значения замените на 1.
""" 
dict1 = {'a': 3, 'b': 4, 'c': 9, 'd': 5, 'e': 6}
dict2 = {key: value if value%2==0 else 1 for key, value in dict1.items()}
print(dict2) 
"""



""" 22 """
# Дан словарь, оставьте все элементы с пустыми значениями, остальные удалите
""" 
dict_ = {'a': None, 'b': 1, 'c': 2, 'd': None, 'e': 3}

for k, v in list(dict_.items()):
    if v:
        del dict_[k]

print(dict_) 
"""



""" 23 """
# Дан словарь dict1, где ключами будут цены товаров, а значениями их названия, затем пройдитесь циклом по нему и поменяйте все ключи элементов,
# возведя их в квадрат, новые элементы запишите в словарь dict2
""" 
dict1 = {25: 'apple', 26: 'orange', 27: 'banana'} 
dict2 = {k**2: v for k, v in dict1.items()}
print(dict2) 
"""



""" 24 """
# Дан список. Создайте словарь dict_, ключами которого будут строки из списка, а значениями их длины
""" 
list_ = ['Bootcamp', 'Makers', 'coding', 'hello']
dict_ = {v: len(v) for v in list_}
print(dict_) 
"""



""" 25 """
# Из предыдущего словаря dict_, достаньте ключ, значение которого является максимальным, если значений несколько, распечатайте каждый из них по отдельности.
""" 
dict_ = {'Bootcamp': 8, 'Makers': 6, 'coding': 6, 'hello': 5}
for k, v in dict_.items():
    if v is max(dict_.values()):
        print(k) 
"""



""" 26 """
# Дан словарь dict1, где ключи - числа от 1 до 5 и значения те же самые числа. Создайте словарь dict2, у которого ключи такие же как в первом словаре, 
# а значения эти же числа, возведенные в куб
""" 
dict1 = {1: 1, 2: 2, 3: 3, 4: 4, 5: 5}
dict2 = {k: v**3 for k, v in dict1.items()}
print(dict2) 
"""



""" 27 """
# Дан словарь dict_, значениями, которого являются словари, измените словарь dict_ таким образом, чтобы значения внутреннего словаря стали внешними значениями
""" 
dict_ = {'a': {'e': 32}, 'b': {'f': 36}, 'c': {'j': 37}, 'd': {'h': 21}}

for k,v in list(dict_.items()): 
    for v2 in v.values(): 
        dict_[k] = v2 
print(dict_) 
"""



""" 28 """
# Дан словарь dict1. Создайте словарь dict2, с ключами как в словаре dict1, а значениями пусть будут произведение чисел внутренних словарей
""" 
dict1 = {'a': {'d': 1, 'e': 4}, 'b': {'f': 2, 'j': 4}, 'c': {'h': 3, 'i': 9}}
dict2 = {}
for k,v in list(dict1.items()): 
    res = 1 
    for j in v.values(): 
        res = res * j 
    dict2[k] = res 
print(dict2) 
"""



""" 29 """
# Дан список, состоящий из строк и чисел. Создайте словарь, ключами которого будут строки из списка, а значениями числа
""" 
list_ = ['hello', 23, 56, 'world', 928, 'Makers', 456, 'word', 223, 89, 'bootcamp', 'coding']
dict_ = {}
words = []
nums = []
for value in list_:
    if type(value) == str:
        words.append(value)
    else:
        nums.append(value)

dict_.update(zip(words, nums))
print(dict_) 
"""



""" 30 """
    # Дан словарь dict_. Отсортируйте словарь по значениям в порядке увеличения.
    # Новые элементы занесите в словарь sorted_dict
""" 
dict_ = {1: 2, 3: 4, 4: 3, 2: 1, 0: 0}
sorted_dict = {}
total = len(dict_)
while len(sorted_dict) < total:
    for k, v in list(dict_.items()):
        if v == min(dict_.values()):
            sorted_dict.update({k:v})
            dict_.pop(k)
print(sorted_dict)
"""
# or
""" 
dict_ = {1: 2, 3: 4, 4: 3, 2: 1, 0: 0} 
sorted_values = sorted(dict_.values()) 
sorted_dict = {} 
for i in sorted_values: 
    for k in dict_.keys(): 
        if dict_ [k] == i: 
            sorted_dict[k] = dict_[k] 
            break 
print(sorted_dict) 
"""



""" 31 """
# Дан словарь dict_. Отсортируйте словарь по значениям в порядке уменьшения.
# Новые элементы занесите в словарь sorted_dict
""" 
dict_ = {1: 2, 3: 4, 4: 3, 2: 1, 0: 0}
sorted_values = sorted(dict_.values(), reverse=True)
sorted_dict = {}
print(sorted_values)
for value in sorted_values:
    for k, v in dict_.items():
        if v == value:
            sorted_dict.update({k:v})

print(sorted_dict) 
"""



""" 32 """
# Дан словарь. С помощью переменной key проверьте есть ли такой ключ в словаре.
# Если есть, напечатайте строку "Key is present in the dictionary", если нет - "Key is not present in the dictionary"
""" 
dict_ = {1: 10, 2: 20, 3: 30, 4: 40, 5: 50, 6: 60}
key = input('Enter key here: ')
if key in dict_.keys():
    print("Key is present in the dictionary")
else:
    print("Key is not present in the dictionary") 
"""



""" 33 """

# Даны 3 словаря. Объедините эти словари в 4
""" 
dict1 = {1:10, 2:20}
dict2 = {3:30, 4:40}
dict3 = {5:50, 6:60}
dict4 = {**dict1, **dict2, **dict3} 
print(dict4) 
"""


""" 34 """
# Даны два списка одинаковой длины. Необходимо создать из них словарь таким образом, чтобы элементы первого списка были ключами, 
# а элементы второго — соответственно значениями нашего словаря
""" 
list1 = [1, 2, 3, 4, 5, 6, 7]
list2 = ['one', 'two', 'three', 'four', 'five', 'six', 'seven']
dict_ = dict(zip(list1, list2))
print(dict_) 
"""



""" 35 """
# Дан словарь. Найдите сумму значений словаря, который хранится под ключом vars, используя значение словаря, под ключом math
""" 
dict_ = {
    'math': {
        'sum': sum
    },
    'vars': {
        'a': 5,
        'b': 20,
        'c': 50
    }
}
res = dict_.get('vars') 
for k,v in dict_.items(): 
    for j in v.values():
        if type(j) != int: 
            print(j(res.values())) 
"""



""" 36 """
# Создайте словарь с числовыми значениями. Необходимо перемножить все значения между собой и записать в переменную result. Ответ вывести в терминал
""" 
a = {'a': 10, 'b': 9, 'c': 3}
res = (a.values())
result = 1
for i in res:
    result *=i
    
print(result) 
"""



""" 37 """
# Напишите код, который создает словарь следующим образом, вам дана строка, например:
# string = "pythonist" 
# нужно создать новый словарь, ключами которого будут буквы строки, а значениями числа, соответствующие количеству повторений данной буквы в строке.4
""" 
string = 'hello'
dict_ = {}
for letter in string:
    dict_.update({letter: string.count(letter)})

print(dict_) 
"""